/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.CurrentAccountBaseWithIdAndStatus
import io.swagger.client.model.DepositBaseWithIdAndRoot
import io.swagger.client.model.DirectDebitBaseWithIdAndRoot
import io.swagger.client.model.FeeBaseWithIdAndRoot
import io.swagger.client.model.InterestBaseWithIdAndRoot
import io.swagger.client.model.InventoryBaseWithIdAndRoot
import io.swagger.client.model.LienBaseWithIdAndRoot
import io.swagger.client.model.PaymentBaseWithIdAndRoot
import io.swagger.client.model.RepostBaseWithIdAndRoot
import io.swagger.client.model.StandingOrderBaseWithIdAndRoot
import io.swagger.client.model.StatementBaseWithIdAndRoot
import io.swagger.client.model.SweepBaseWithIdAndRoot
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object RetrieveApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 200 : Seq[String] (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param behaviorQualifier Behavior Qualifier Name. ex- deposit
   * @param collectionFilter Filter to refine the result set. ex- &#39;amount&gt; $5000&#39;
   */
  def retrieveBehaviorQualifierReferenceIds(crReferenceId: String, behaviorQualifier: String, collectionFilter: Option[String] = None): ApiRequest[Seq[String]] =
    ApiRequest[Seq[String]](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/{behavior-qualifier}", "application/json")
      .withQueryParam("collection-filter", collectionFilter)
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("behavior-qualifier", behaviorQualifier)
      .withSuccessResponse[Seq[String]](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : CurrentAccountBaseWithIdAndStatus (successful)
   * 
   * @param crReferenceId Product Instance Reference
   */
  def retrieveCurrentAccountFulfillmentArrangement(crReferenceId: String): ApiRequest[CurrentAccountBaseWithIdAndStatus] =
    ApiRequest[CurrentAccountBaseWithIdAndStatus](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withSuccessResponse[CurrentAccountBaseWithIdAndStatus](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Seq[String] (successful)
   */
  def retrieveCurrentAccountFulfillmentArrangementBehaviorQualifiers(): ApiRequest[Seq[String]] =
    ApiRequest[Seq[String]](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/behavior-qualifiers", "application/json")
      .withSuccessResponse[Seq[String]](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : DepositBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Deposit Transaction Reference
   */
  def retrieveCurrentAccountFulfillmentArrangementDeposit(crReferenceId: String, bqReferenceId: String): ApiRequest[DepositBaseWithIdAndRoot] =
    ApiRequest[DepositBaseWithIdAndRoot](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/deposits/{bq-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[DepositBaseWithIdAndRoot](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : DirectDebitBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Direct Debit Facility Reference
   */
  def retrieveCurrentAccountFulfillmentArrangementDirectDebit(crReferenceId: String, bqReferenceId: String): ApiRequest[DirectDebitBaseWithIdAndRoot] =
    ApiRequest[DirectDebitBaseWithIdAndRoot](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/direct-debits/{bq-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[DirectDebitBaseWithIdAndRoot](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : FeeBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Fee Transaction Reference
   */
  def retrieveCurrentAccountFulfillmentArrangementFee(crReferenceId: String, bqReferenceId: String): ApiRequest[FeeBaseWithIdAndRoot] =
    ApiRequest[FeeBaseWithIdAndRoot](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/fees/{bq-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[FeeBaseWithIdAndRoot](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : InterestBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Interest Rate Transaction Reference
   */
  def retrieveCurrentAccountFulfillmentArrangementInterest(crReferenceId: String, bqReferenceId: String): ApiRequest[InterestBaseWithIdAndRoot] =
    ApiRequest[InterestBaseWithIdAndRoot](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/interests/{bq-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[InterestBaseWithIdAndRoot](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : InventoryBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Inventory Item Reference
   */
  def retrieveCurrentAccountFulfillmentArrangementInventory(crReferenceId: String, bqReferenceId: String): ApiRequest[InventoryBaseWithIdAndRoot] =
    ApiRequest[InventoryBaseWithIdAndRoot](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/inventories/{bq-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[InventoryBaseWithIdAndRoot](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : LienBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Lien Facility Reference
   */
  def retrieveCurrentAccountFulfillmentArrangementLien(crReferenceId: String, bqReferenceId: String): ApiRequest[LienBaseWithIdAndRoot] =
    ApiRequest[LienBaseWithIdAndRoot](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/liens/{bq-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[LienBaseWithIdAndRoot](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : PaymentBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Payment Instruction Reference
   */
  def retrieveCurrentAccountFulfillmentArrangementPayment(crReferenceId: String, bqReferenceId: String): ApiRequest[PaymentBaseWithIdAndRoot] =
    ApiRequest[PaymentBaseWithIdAndRoot](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/payments/{bq-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[PaymentBaseWithIdAndRoot](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Seq[String] (successful)
   * 
   * @param collectionFilter Filter to refine the result set. ex- &#39;customer-reference-id &#x3D; CR123&#39;
   */
  def retrieveCurrentAccountFulfillmentArrangementReferenceIds(collectionFilter: Option[String] = None): ApiRequest[Seq[String]] =
    ApiRequest[Seq[String]](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement", "application/json")
      .withQueryParam("collection-filter", collectionFilter)
      .withSuccessResponse[Seq[String]](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : RepostBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Report Instance Reference
   */
  def retrieveCurrentAccountFulfillmentArrangementReport(crReferenceId: String, bqReferenceId: String): ApiRequest[RepostBaseWithIdAndRoot] =
    ApiRequest[RepostBaseWithIdAndRoot](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/reports/{bq-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[RepostBaseWithIdAndRoot](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : StandingOrderBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Standing Order Facility Reference
   */
  def retrieveCurrentAccountFulfillmentArrangementStandingOrder(crReferenceId: String, bqReferenceId: String): ApiRequest[StandingOrderBaseWithIdAndRoot] =
    ApiRequest[StandingOrderBaseWithIdAndRoot](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/standing-orders/{bq-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[StandingOrderBaseWithIdAndRoot](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : StatementBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Statement Instance Reference
   */
  def retrieveCurrentAccountFulfillmentArrangementStatement(crReferenceId: String, bqReferenceId: String): ApiRequest[StatementBaseWithIdAndRoot] =
    ApiRequest[StatementBaseWithIdAndRoot](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/statements/{bq-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[StatementBaseWithIdAndRoot](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : SweepBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Sweep Facility Reference
   */
  def retrieveCurrentAccountFulfillmentArrangementSweep(crReferenceId: String, bqReferenceId: String): ApiRequest[SweepBaseWithIdAndRoot] =
    ApiRequest[SweepBaseWithIdAndRoot](ApiMethods.GET, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/sweeps/{bq-reference-id}", "application/json")
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[SweepBaseWithIdAndRoot](200)
      

}

