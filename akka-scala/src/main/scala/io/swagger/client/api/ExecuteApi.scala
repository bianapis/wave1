/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.DepositBase
import io.swagger.client.model.DepositBaseWithIdAndRoot
import io.swagger.client.model.PaymentBase
import io.swagger.client.model.PaymentBaseWithIdAndRoot
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object ExecuteApi {

  /**
   * Create a new Deposit
   * 
   * Expected answers:
   *   code 201 : DepositBaseWithIdAndRoot (Created a deposit successfully)
   * 
   * @param crReferenceId Product Instance Reference
   * @param body Execute deposits request payload
   */
  def executeCurrentAccountFulfillmentArrangementDepositCreate(crReferenceId: String, body: DepositBase): ApiRequest[DepositBaseWithIdAndRoot] =
    ApiRequest[DepositBaseWithIdAndRoot](ApiMethods.POST, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/deposits/execution", "application/json")
      .withBody(body)
      .withPathParam("cr-reference-id", crReferenceId)
      .withSuccessResponse[DepositBaseWithIdAndRoot](201)
        /**
   * Update an exising Deposit
   * 
   * Expected answers:
   *   code 200 : DepositBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId Deposit reference id
   * @param body Execute deposits request payload
   */
  def executeCurrentAccountFulfillmentArrangementDepositUpdate(crReferenceId: String, bqReferenceId: String, body: DepositBase): ApiRequest[DepositBaseWithIdAndRoot] =
    ApiRequest[DepositBaseWithIdAndRoot](ApiMethods.PUT, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/deposits/{bq-reference-id}/execution", "application/json")
      .withBody(body)
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[DepositBaseWithIdAndRoot](200)
        /**
   * Create a new Payment
   * 
   * Expected answers:
   *   code 201 : PaymentBaseWithIdAndRoot (Creted a a Payment successfully)
   * 
   * @param crReferenceId Product Instance Reference
   * @param body Execute payments request payload
   */
  def executeCurrentAccountFulfillmentArrangementPaymentCreate(crReferenceId: String, body: PaymentBase): ApiRequest[PaymentBaseWithIdAndRoot] =
    ApiRequest[PaymentBaseWithIdAndRoot](ApiMethods.POST, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/payments/execution", "application/json")
      .withBody(body)
      .withPathParam("cr-reference-id", crReferenceId)
      .withSuccessResponse[PaymentBaseWithIdAndRoot](201)
        /**
   * Update an exising Payment
   * 
   * Expected answers:
   *   code 200 : PaymentBaseWithIdAndRoot (successful)
   * 
   * @param crReferenceId Product Instance Reference
   * @param bqReferenceId deposit reference id
   * @param body Execute payments request payload
   */
  def executeCurrentAccountFulfillmentArrangementPaymentUpdate(crReferenceId: String, bqReferenceId: String, body: PaymentBase): ApiRequest[PaymentBaseWithIdAndRoot] =
    ApiRequest[PaymentBaseWithIdAndRoot](ApiMethods.PUT, "https://virtserver.swaggerhub.com/BIAN/current-account/3.0.1", "/current-account/current-account-fulfillment-arrangement/{cr-reference-id}/payments/{bq-reference-id}/execution", "application/json")
      .withBody(body)
      .withPathParam("cr-reference-id", crReferenceId)
      .withPathParam("bq-reference-id", bqReferenceId)
      .withSuccessResponse[PaymentBaseWithIdAndRoot](200)
      

}

